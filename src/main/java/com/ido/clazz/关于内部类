内部类分为四种：
    1、静态内部类
        静态内部类定义在类中，任何方法外，用static定义，并且只能访问外部类的静态成员变量。
        生成一个静态内部类直接通过new 外部类.内部类(); 生成，不需要使用外部类的对象去生成。
        当接口与类的方法命名发生冲突时，如果想实现接口方法，就需要引入内容类来实现。可以理解内部类的使用可构成多继承。
        案例见：simulatedMultipleInheritance
    2、成员内部类
        作为外部类成员存在，可以访问外部类的私有成员或属性。
        创建内部类时，外部类实例必须存在.
        假如内部类与外部类有相同的成员变量，内部类引外部类变量时：外部类.this.成员变量
        外部类访问成员内部类需要new内部类对象访问.
    3、局部内部类
        定义在方法中或在一个作用域里的类，与成员内部类区别就是访问权限只限于方法内或该作用域内。
        可以访问外部类的成员变量：外部类.this.成员变量
        局部内部类不可以加static修饰，会报错
    4、匿名内部类
           不去单独实现一个类，在方法中实现。
           唯一一个没有构造器的类
            可以在类中实现多个接口，对接口中的方法进行实现。